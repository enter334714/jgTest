{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/model/track-log.js","webpack:///./src/wx-track/base-handler.js","webpack:///./src/utils/defineProperty.js","webpack:///./src/collect/times-handler.js","webpack:///./src/collect/socket-times-handler.js","webpack:///./src/config/config.js","webpack:///./src/wx-apm.js","webpack:///./src/wx-track/wx-tracker.js","webpack:///./src/collect/collector.js","webpack:///./src/collect/gamesdk_reporter.js","webpack:///./src/collect/log-temper.js","webpack:///./src/utils/modal.js","webpack:///./src/wx-track/wx-download-handler.js","webpack:///./src/wx-track/wx-request-handler.js","webpack:///./src/wx-track/wx-upload-handler.js","webpack:///./src/wx-track/wx-socket-handler.js","webpack:///./src/wx-track/wx-error-handler.js","webpack:///./src/wx-track/wx-memory-handler.js","webpack:///./src/env.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IncreatorID","TrackLog","LOG_TYPE","UNCAUGHT_ERROR","RES_REQ","RES_ERROR","DOWNLOAD_ERROR","DOWNLOAD_REQ","UPLOAD_REQ","UPLOAD_ERROR","SOCKET_REQ","SOCKET_ERROR","APP_LANCH","APP_ERROR","PAGE_NOT_FIND","PAGE_LOAD","PAGE_READY","GAME_NOTICE","GAME_TRACK","MEMORY_WARN","type","collector","arguments","length","undefined","_classCallCheck","this","id","logType","extra","collected","url","resURI","errMsg","msg","assign","startTime","Date","getTime","timestamp","collect","tryReport","res","ts","ext","BaseHandler","_ref","wx","config","fun","logTp","data","addExtra","obj","propertyName","injector","orignProperty","platforms","TimesHandler","TIMES_TYPE","RES_TIMES","DOWNLOAD_TIMES","reset","arr1","split","temp","tempUrl","indexOf","hadData","platform","getPlatformByUrl","requestInfo","platformSource","requestTimes","downloadTimes","gameSource","SOCKET_TIMES_TYPE","CONNECT_TIMES","DISCONNECT_TIMES","SocketTimesHandler","hasSocketData","socketInfo","connectTimes","disconnectTimes","DEFAULT_CONFIG","Debug","ReportDelay","ErrorReportDelay","ClearRepeatLog","EnabledDownLoadErr","EnabledDownLoadPerf","EnabledUpLoadErr","EnabledUpLoadPerf","EnabledConsoleErr","EnabledAppOnErr","EnabledAppLaunch","EnabledPagePerf","EnabledResErr","EnabledResPerf","EnabledSocket","EnabledSocketTimes","EnabledMemoryWarning","EnabledTempFailLog","MaxTempFailLogLength","Filters","reportUrlProc","reportUrlDev","Extra_CONFIG","_config","_trackLog","newTrack","appID","gameId","_typeof","env","console","log","wxTracker","WxTracker","Env","track","tracker","notify","setUserInfo","WxTrack","Collector","params","handlers","WxSocketHandler","ConsoleError","WxRequestHandler","WxDownloadHandler","WxUploadHandler","MemoryWranHandler","forEach","handler","handle","reporter","logs","started","modal","Modal","GameSDKReporter","timeser","socketTimeser","clearTimeout","_this","times","getInfo","sockets","report","ids","join","alert","errorReporter","clearReporter","fixedReporter","fixedReport","setTimeout","finalReport","checkValid","add","startsWith","getReportUrl","filters","concat","some","rule","test","now","old","every","JSON","stringify","_this2","isRepeat","push","startFixedReport","clientInfo","initNetworkType","logTemper","LogTemper","userInfo","netTp","getNetworkType","success","networkType","onNetworkStatusChange","bindedNetChangge","netType","sys","getSystemInfoSync","version","system","sdk","SDKVersion","model","brand","callback","checkTemp","logsTemp","map","toJSON","message","getTemp","game","gameVersion","client","getClientInfo","user","post","err","setTemp","request","method","header","content-type","fail","_temp","_max","enable","setStorageSync","e","val","getStorageSync","arry","maxLen","sIndex","slice","limitLens","setStorage","render","_ref2","tLogs","tSockets","tTimes","mergeNum","tempTimes","temps","getStorage","mergeTemp","clear","modalStack","showIng","opt","show","onSuccess","showModal","next","pop","isFun","content","title","showCancel","confirmText","_timesHandler","_possibleConstructorReturn","__proto__","getPrototypeOf","_defineProperty2","default","downloadFileHandler","origDownloadFile","filePath","start","addTimes","reportError","setType","end","status","statusCode","size","param","reportEnd","requestHandler","origRequest","uploadFileHandler","origUploadFile","_socketTimesHandler","connectSocketHandler","orignConnectSocket","task","logParams","protocols","onError","addSocketTimes","onClose","code","ConsoleErrorHandler","consoleErrorHandler","onErrorhandler","bindOnError","offError","offErrorhandler","msgSplit","stack","lineSplit","column","replace","line","isNaN","bindedOnError","renderErrMsg","originFun","_this3","_this4","_this5","_len","Array","_key","bindTimes","reported","onMemoryWarning","memoryWranHandler","firstBind","onBindTime","date"],"mappings":"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","file":"wxapm.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var IncreatorID = 1;\n\nexport const LOG_TYPE = {\n    UNCAUGHT_ERROR: 'unc-err',\n    RES_REQ: 'res-req',\n    RES_ERROR: 'res-err',\n    DOWNLOAD_ERROR: 'down-err',\n    DOWNLOAD_REQ: 'down-req',\n    UPLOAD_REQ: 'up-req',\n    UPLOAD_ERROR: 'up-err',\n    SOCKET_REQ: 'soc-req',\n    SOCKET_ERROR: 'soc-err',\n    APP_LANCH: 'app-lanch',\n    APP_ERROR: 'app-err',\n    PAGE_NOT_FIND: 'page-null',\n    PAGE_LOAD: 'page-load',\n    PAGE_READY: 'page-ready',\n    GAME_NOTICE: 'game-notice',\n    GAME_TRACK: 'game-track',\n    MEMORY_WARN: 'mem-warn',\n};\n\nexport default class TrackLog {\n    id;\n    logType;\n    resURI;\n    timestamp;\n    extra;\n    collected;\n\n    constructor(type, collector = {}) {\n        this.id = IncreatorID++;\n        this.logType = type;\n        this.extra = {};\n        this.collected = false;\n        this.collector = collector;\n    }\n\n    setType(type) {\n        this.logType = type;\n        return this;\n    }\n\n    addExtra(extra) {\n        if (extra.url) this.resURI = extra.url;\n        if (extra.errMsg && !extra.msg) extra.msg = extra.errMsg;\n        this.extra = Object.assign(this.extra, extra);\n        return this;\n    }\n\n    start() {\n        this.startTime = new Date().getTime();\n        return this;\n    }\n\n    end() {\n        this.timestamp = new Date().getTime() - this.startTime;\n        this.timestamp = this.timestamp < 0 ? 0 : this.timestamp;\n        this.collect();\n        return this;\n    }\n\n    collect() {\n        if (!this.collected && typeof this.collector.collect === 'function') {\n            this.collected = true;\n            this.collector.collect(this);\n        }\n        return this;\n    }\n\n    // 尝试上报\n    tryReport() {\n        if (!this.collected && typeof this.collector.tryReport === 'function') {\n            this.collected = true;\n            this.collector.tryReport(this);\n        }\n        return this;\n    }\n\n    toJSON() {\n        return {\n            res: this.resURI,\n            type: this.logType,\n            ts: this.timestamp,\n            ext: this.extra\n        };\n    }\n}","import TrackLog from '../model/track-log';\n\nexport default class BaseHandler {\n    wx;\n    config;\n    tracker;\n\n    constructor({ wx, config, collector }) {\n        this.wx = wx;\n        this.config = config;\n        this.collector = collector;\n    }\n\n    handle() { }\n\n    isFun(fun) {\n        return !!(fun && typeof fun === 'function');\n    }\n\n    tracker(logTp, data = {}) {\n        return new TrackLog(logTp, this.collector).addExtra(data);\n    }\n\n}\n","export default function (obj, propertyName, injector) {\n    let orignProperty = obj[propertyName];\n    Object.defineProperty(obj, propertyName, {\n        value: injector(orignProperty)\n    });\n}","const platforms = ['wxmini', 'wxmini-log', 'platform', 'wxmini-test', 'platform-test', 'wxmini-dev', 'platform-dev'];\n\nexport const TIMES_TYPE = {\n    RES_TIMES: 'requestTimes',\n    DOWNLOAD_TIMES: 'downloadTimes'\n};\n\nexport default class TimesHandler {\n    requestInfo;\n    hadData;\n\n    constructor(collector) {\n        this.collector = collector;\n        this.reset();\n    }\n\n    getPlatformByUrl(url) {\n        let arr1 = url.split('//');\n        let temp = arr1.length ? arr1[1].split('.') : [];\n        let tempUrl = temp.length ? temp[0] : '';\n\n        return platforms.indexOf(tempUrl) > -1 ? 'platformSource' : 'gameSource';\n    }\n\n    add(url, type) {\n        if (!url) {\n            return;\n        }\n\n        this.hadData = true;\n        let platform = this.getPlatformByUrl(url);\n        this.requestInfo[platform][type] += 1;\n    }\n\n    reset() {\n        this.hadData = false;\n        this.requestInfo = {\n            platformSource: {\n                requestTimes: 0,\n                downloadTimes: 0\n            },\n            gameSource: {\n                requestTimes: 0,\n                downloadTimes: 0\n            }\n        };\n    }\n\n    getInfo() {\n        return this.hadData ? this.requestInfo : undefined\n    }\n\n}\n","export const SOCKET_TIMES_TYPE = {\n    CONNECT_TIMES: 'connectTimes',\n    DISCONNECT_TIMES: 'disconnectTimes'\n};\n\nexport default class SocketTimesHandler {\n    socketInfo;\n    hasSocketData;\n\n    constructor(collector) {\n        this.collector = collector;\n        this.reset();\n    }\n\n    add(type) {\n        if (!type) { return; }\n\n        this.hasSocketData = true;\n        this.socketInfo[type] += 1;\n    }\n\n    reset() {\n        this.hasSocketData = false;\n        this.socketInfo = {\n            connectTimes: 0,\n            disconnectTimes: 0\n        };\n    }\n\n    getInfo() {\n        return this.hasSocketData ? this.socketInfo : undefined;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    /**\n     * 测试开关\n     */\n    Debug: false,\n\n    /**\n     * 上报延迟时间，默认1分钟\n     */\n    ReportDelay: 1000 * 60,\n\n    /**\n     * 错误上报延迟时间，默认2s\n     */\n    ErrorReportDelay: 1000 * 2,\n\n    /**\n     * 上报日志去重\n     */\n    ClearRepeatLog: true,\n\n    /**\n     * 是否开启下载报错监控\n     */\n    EnabledDownLoadErr: true,\n\n    /**\n     * 是否开启下载性能监控\n     */\n    EnabledDownLoadPerf: false,\n\n    /**\n     * 是否开启上传报错监控\n     */\n    EnabledUpLoadErr: true,\n\n    /**\n     * 是否开启上传性能监控\n     */\n    EnabledUpLoadPerf: false,\n\n    /**\n     * 是否开启监控控制台 error\n     */\n    EnabledConsoleErr: false,\n\n    /** \n     * 是否开启监控页面onError\n     */\n    EnabledAppOnErr: true,\n\n    /** \n     * 是否开启小程序页面加载监控\n     */\n    EnabledAppLaunch: false,\n\n    /** \n     * 是否开启小程序页面性能监控\n     */\n    EnabledPagePerf: false,\n\n    /**\n     * 是否开启请求错误上报\n     */\n    EnabledResErr: true,\n\n    /**\n     * 是否开启请求性能上报\n     */\n    EnabledResPerf: false,\n\n    /**\n     * 是否开启socket监控，默认关闭\n     */\n    EnabledSocket: false,\n\n    /**\n     * 是否开启socket链接次数监控，默认开启\n     */\n    EnabledSocketTimes: true,\n\n    /**\n     * 内存告警\n     */\n    EnabledMemoryWarning: true,\n\n\n    /**\n     * 是否缓存上报失败的日志\n     */\n    EnabledTempFailLog: false,\n\n    /**\n     * 最多缓存上报失败日志条数\n     */\n    MaxTempFailLogLength: 100,\n\n    /**\n     * 过滤条件\n     */\n    Filters: [],\n    reportUrlProc: 'https://platform.hortorgames.com/wxlog/api/v1/apmlog',\n    reportUrlDev: 'https://platform-test.hortorgames.com/wxlog/api/v1/apmlog'\n};\n\nexport const Extra_CONFIG = {\n    Filters: [/\\/v1\\/statlog$/, /\\/v1\\/log$/, /\\/v1\\/log\\/multi$/]\n};","import WxTracker from './wx-track/wx-tracker';\nimport { DEFAULT_CONFIG } from './config/config';\nimport { LOG_TYPE } from './model/track-log';\nimport Env from './env';\n\nclass newTrack {\n    wxTracker;\n    constructor() {\n    }\n    init(appID, config = DEFAULT_CONFIG) {\n        if (typeof appID === 'string') {\n            config.gameId = appID;\n        } else if (typeof appID === 'object') {\n            config = Object.assign({}, config, appID);\n        }\n        config.Debug = !config.env || config.env !== 'Prod' || config.Debug;\n        console.log('[APM] config', config);\n\n        // 正式环境会关闭监控，后期开放；\n        // if (!config.Debug) return;\n\n        this.wxTracker = new WxTracker(wx, Object.assign({}, //eslint-disable-line\n            DEFAULT_CONFIG,\n            Env,\n            config\n        )).track();\n    }\n\n    notify(msg, data) {\n        if (!this.wxTracker) return { errMsg: 'please init apm first' };\n        return this.wxTracker.tracker(LOG_TYPE.GAME_NOTICE, Object.assign({ msg }, data)).collect();\n    }\n\n    notifyError(msg, data) {\n        return this.notify(msg, data);\n    }\n\n    newTracker(msg, data) {\n        if (!this.wxTracker) return { errMsg: 'please init apm first' };\n        return this.wxTracker.tracker(LOG_TYPE.GAME_TRACK, Object.assign({ msg }, data));\n    }\n\n    setUserInfo(data) {\n        this.wxTracker && this.wxTracker.setUserInfo(data);\n    }\n}\n\nmodule.exports = new newTrack();","import Collector from '../collect/collector';\nimport TrackLog from '../model/track-log';\nimport WxDownloadHandler from './wx-download-handler';\nimport WxRequestHandler from './wx-request-handler';\nimport WxUploadHandler from './wx-upload-handler';\nimport WxSocketHandler from './wx-socket-handler';\n// import WxPageHandler from './wx-page-handler';\n// import WxAppHandler from './wx-app-handler';\nimport ConsoleError from './wx-error-handler';\nimport MemoryWranHandler from './wx-memory-handler';\n\n\nexport default class WxTrack {\n    config;\n    handlers;\n    collector;\n    constructor(wx, config) {\n        this.wx = wx;\n        this.config = config;\n        this.collector = new Collector(wx, config);\n        let params = { wx, config, collector: this.collector };\n        this.handlers = [\n            // new WxAppHandler(params),\n            // new WxPageHandler(params),\n            new WxSocketHandler(params),\n            new ConsoleError(params),\n            new WxRequestHandler(params),\n            new WxDownloadHandler(params),\n            new WxUploadHandler(params),\n            new MemoryWranHandler(params),\n        ];\n    }\n\n    track() {\n        this.handlers.forEach((handler) => {\n            handler.handle();\n        });\n        return this;\n    }\n\n    tracker(logTp, data = {}) {\n        return new TrackLog(logTp, this.collector).addExtra(data);\n    }\n\n    setUserInfo(data) {\n        this.collector && this.collector.reporter.setUserInfo(data);\n    }\n\n}","import GameSDKReporter from './gamesdk_reporter';\nimport TimesHandler from './times-handler';\nimport SocketTimesHandler from './socket-times-handler';\nimport { Extra_CONFIG } from '../config/config';\nimport Modal from '../utils/modal';\n\nexport default class Collector {\n    logs = [];\n    // timeID = -1;\n    started = false;\n    wx;\n    config;\n    reporter;\n    filters;\n    errorReporter;\n    fixedReporter;\n    constructor(wx, config) {\n        this.wx = wx;\n        this.modal = new Modal(wx);\n        this.config = config;\n        this.reporter = new GameSDKReporter(this.wx, config);\n        this.timeser = new TimesHandler();\n        this.socketTimeser = new SocketTimesHandler();\n    }\n\n    // 清除计时器\n    clearReporter(reporter) {\n        if (reporter) {\n            clearTimeout(reporter);\n        }\n        return null;\n    }\n\n    // 最终上报\n    finalReport() {\n        let logs = this.logs;\n        let times = this.timeser.getInfo();\n        let sockets = this.socketTimeser.getInfo();\n\n        this.reporter.report({ logs, times, sockets }, (res = {}) => {\n            let data = res.data || [];\n\n            if (!data.length) {\n                return;\n            }\n\n            let ids = data.join(', ');\n            if (ids) {\n                this.modal.alert(`${ids}`, `错误ID`);\n            }\n        });\n        this.logs = [];\n        this.timeser.reset();\n        this.socketTimeser.reset();\n        this.errorReporter = this.clearReporter(this.errorReporter);\n        this.fixedReporter = this.clearReporter(this.fixedReporter);\n        this.fixedReport();\n    }\n\n    // 定频上报\n    fixedReport() {\n        this.fixedReporter = setTimeout(this.finalReport.bind(this), this.config.ReportDelay);\n    }\n\n    // 定频上报开始\n    startFixedReport() {\n        if (this.started) return;\n        this.started = true;\n        this.fixedReport();\n    }\n\n    // 提前尝试上报，如果已经尝试则只添加不上报\n    tryReport(log) {\n        if (!this.checkValid(log)) return;\n        this.add(log);\n\n        if (this.errorReporter) return;\n        this.errorReporter = setTimeout(this.finalReport.bind(this), this.config.ErrorReportDelay);\n    }\n\n    // 收集\n    collect(log) {\n        if (!this.checkValid(log)) return;\n        this.add(log);\n    }\n\n    // 过滤\n    checkValid(log) {\n        if (!log || (log.resURI && log.resURI.startsWith(this.reporter.getReportUrl()))) {\n            return false;\n        }\n\n        if (!log.resURI) return true;\n\n        if (!this.filters) {\n            this.filters = Extra_CONFIG.Filters || [];\n            this.filters = this.filters.concat(this.config.Filters);\n        }\n        if (!this.filters.length) return true;\n        let result = this.filters.some((rule) => {\n            return rule && rule.test && rule.test(log.resURI);\n        });\n        return !result;\n    }\n\n    // 去重\n    isRepeat(now = {}, old = {}) {\n        if (now.id && now.id === old.id) return true;\n        if (!this.config.ClearRepeatLog) return false;\n        let checkKeys = ['resURI', 'logType', 'extra'];\n        return checkKeys.every((key) => {\n            return JSON.stringify(now[key]) == JSON.stringify(old[key]);\n        });\n    }\n\n    // 加日志\n    add(log) {\n        let found = this.logs.some((l, i) => {\n            // 去重\n            if (this.isRepeat(log, l)) {\n                if (!log.timestamp || log.timestamp > l.timestamp) {\n                    this.logs[i] = log;\n                }\n                return true;\n            }\n        });\n\n        if (found) return;\n        this.logs.push(log);\n\n        // 上报开始\n        this.startFixedReport();\n    }\n\n    // 加次数\n    addTimes(resURI, type) {\n        if (!this.checkValid({ resURI })) return;\n        this.timeser.add(resURI, type);\n\n        // 上报开始\n        this.startFixedReport();\n    }\n\n    // add socket\n    addSocketTimes(type) {\n        this.socketTimeser.add(type);\n\n        // start report\n        this.startFixedReport();\n    }\n}\n","import LogTemper from './log-temper';\n\nexport default class GameSDKReporter {\n    clientInfo = null;\n\n    constructor(wx, config) {\n        this.wx = wx;\n        this.config = config;\n        this.initNetworkType();\n        this.logTemper = new LogTemper(this.wx, config);\n    }\n\n    setUserInfo(data) {\n        this.config.userInfo = Object.assign(this.config.userInfo || {}, data);\n    }\n\n    initNetworkType() {\n        // 初始化网络环境\n        this.netTp = 'unknown';\n\n        // 获取当前网络环境\n        this.wx.getNetworkType({\n            success: res => {\n                this.netTp = res.networkType;\n            }\n        });\n\n        // 监听网络环境变化\n        if (!this.wx.onNetworkStatusChange || typeof this.wx.onNetworkStatusChange !== 'function') return;\n        if (this.bindedNetChangge) return;\n        this.bindedNetChangge = true;\n\n        this.wx.onNetworkStatusChange(res => {\n            this.netTp = res.networkType;\n        });\n    }\n\n    getClientInfo() {\n        if (this.clientInfo) {\n            this.clientInfo.netType = this.netTp;\n            return this.clientInfo;\n        }\n        let sys = this.wx.getSystemInfoSync();\n        return this.clientInfo = {\n            version: sys.version,\n            system: sys.system,\n            platform: sys.platform,\n            sdk: sys.SDKVersion,\n            model: sys.model,\n            netType: this.netTp,\n            brand: sys.brand,\n        };\n    }\n\n    report(msg = {}, callback) {\n        let { logs, times, sockets } = msg;\n        let hasTemp = this.logTemper.checkTemp();\n\n        // 没有缓存 且 logs 和 times, sockets 均不合法 直接返回\n        if (!hasTemp && (!msg.logs || !msg.logs.length) && !msg.times && !msg.sockets) {\n            return;\n        }\n\n        // log不合法则填充默认值\n        let logsTemp = [];\n\n        if (logs.length === 0) {\n            if (times) {\n                logsTemp = [{ type: 'req-times' }];\n            }\n            if (sockets) {\n                logsTemp = [{ type: 'socket-track' }];\n            }\n        } else {\n            logsTemp = logs.map((log) => { return log.toJSON() });\n        }\n\n        // 合并历史\n        let message = this.logTemper.getTemp({ logs: logsTemp, times, sockets });\n\n        let config = this.config;\n        let game = {\n            gameId: config.gameId,\n            version: config.gameVersion,\n            env: config.env\n        };\n        let data = {\n            game,\n            client: this.getClientInfo(),\n            user: config.userInfo,\n            logs: message.logs,\n            requestInfo: message.times,\n            socketInfo: message.sockets\n            // needID: this.config.Debug && typeof callback === 'function'\n        };\n\n        this.post(data, (res, err) => {\n            if (err) {\n                this.logTemper.setTemp(message);\n                return;\n            }\n            callback && callback(res);\n        });\n    }\n\n    getReportUrl() {\n        return this.config.Debug ? this.config.reportUrlDev : this.config.reportUrlProc;\n    }\n\n    post(data, callback) {\n        // console.log('[APM] report', data);\n        this.wx.request({\n            url: this.getReportUrl(),\n            method: 'POST',\n            data,\n            header: {\n                'content-type': 'application/json'\n            },\n            success: (res = {}) => {\n                callback && callback(res.data);\n            },\n            fail: err => {\n                callback && callback(null, err);\n            }\n        });\n    }\n}","\nconst TMEMP_LOGS = '__APM_TEMP_LOGS';\n\nexport default class LogTemper {\n    constructor(wx, config) {\n        this.wx = wx;\n        this._temp = null;\n        this._max = config.MaxTempFailLogLength || 0;\n        this.enable = config.EnabledTempFailLog;\n    }\n\n    setStorage(data) {\n        try {\n            this._temp = data;\n            this.wx.setStorageSync(TMEMP_LOGS, data);\n        } catch (e) {\n            console.log('[APM] set storage err: ', e);\n        }\n    }\n\n    getStorage() {\n        let val = this._temp;\n\n        if (val) {\n            return val;\n        }\n\n        try {\n            val = this.wx.getStorageSync(TMEMP_LOGS);\n            this._temp = val;\n        } catch (e) {\n            val = '';\n            console.log('[APM] get storage err: ', e);\n        }\n        return val;\n    }\n\n\n    limitLens(arry, maxLen) {\n        let temp = arry;\n        let sIndex = arry.length - maxLen;\n        if (maxLen > 0 && sIndex > 0) {\n            temp = arry.slice(sIndex);\n        }\n        return temp;\n    }\n\n\n    setTemp(log) {\n        if (!this.enable) {\n            return;\n        }\n\n        let temp = this._temp || [];\n        temp.push(log);\n        this._temp = this.limitLens(temp, this._max);\n\n        console.log('[APM] storage fail log: ', this._temp);\n        this.setStorage(this._temp);\n    }\n\n    mergeNum(data, temp) {\n        let render = data || temp;\n        if (!render) {\n            return undefined;\n        }\n\n        temp = temp || {};\n        data = data || {};\n\n        for (let i in render) {\n            temp[i] = temp[i] || 0;\n            temp[i] += (data[i] || 0);\n        }\n\n        return temp\n    }\n\n    mergeTemp(temp, log) {\n        let { logs, sockets, times } = log || {};\n        let { logs: tLogs, sockets: tSockets, times: tTimes } = temp || {};\n        let data = {};\n\n        // 合并 logs 数组\n        data.logs = this.limitLens((tLogs || []).concat(logs || []), this._max);\n\n        // 合并 sockets 计数\n        data.sockets = this.mergeNum(sockets, tSockets);\n\n        // 合并 请求 计数\n        let tempTimes = times || tTimes;\n        if (tempTimes) {\n            data.times = {};\n            for (let i in tempTimes) {\n                data.times[i] = this.mergeNum((times || {})[i], (tTimes || {})[i]);\n            }\n        }\n\n        return data;\n    }\n\n    getTemp(log) {\n        if (!this.enable) {\n            return log;\n        }\n\n        let temps = this.getStorage();\n        let data = Object.assign({}, log || {});\n        if (temps && temps.length) {\n            temps.forEach(temp => {\n                data = this.mergeTemp(temp, data);\n            });\n\n            console.log('[APM] merge storage log: ', data);\n            this.clear();\n        }\n        return data;\n    }\n\n    checkTemp() {\n        return this.enable && this.getStorage();\n    }\n\n    clear() {\n        this.setStorage('');\n    }\n\n}\n","export default class Modal {\n    wx;\n    modalStack = [];\n    showIng = false;\n\n    constructor(wx) {\n        this.wx = wx;\n    }\n\n    isFun(fun) {\n        return !!(fun && typeof fun === 'function');\n    }\n\n    show(opt) {\n        if (this.showIng) {\n            return this.modalStack.push(this.show.bind(this, opt));\n        }\n        this.showIng = true;\n        let onSuccess = opt.success;\n        this.wx.showModal(Object.assign(opt, {\n            success: (res) => {\n                this.showIng = false;\n                if (this.modalStack.length) {\n                    let next = this.modalStack.pop();\n                    this.isFun(next) && next();\n                }\n                this.isFun(onSuccess) && onSuccess(res);\n            }\n        }));\n    }\n\n    alert(content, title, success) {\n        this.show({\n            title,\n            content,\n            showCancel: false,\n            confirmText: '知道了',\n            success\n        });\n    }\n}\n","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\nimport { TIMES_TYPE } from '../collect/times-handler';\n\nexport default class WxDownloadHandler extends BaseHandler {\n    constructor(params) {\n        super(params);\n    }\n\n    handle() {\n        if (!this.config.EnabledDownLoadErr && !this.config.EnabledDownLoadPerf) return;\n        defineProperty(this.wx, 'downloadFile', this.downloadFileHandler.bind(this));\n    }\n\n    downloadFileHandler(origDownloadFile) {\n        return (params) => {\n            // console.log('[APM] download', params);\n            let log = this.tracker('', {\n                url: params.url,\n                filePath: params.filePath,\n            }).start();\n\n            this.collector.addTimes(params.url, TIMES_TYPE.DOWNLOAD_TIMES);\n\n            let reportError = (err) => {\n                console.log('[APM] download err', err);\n                if (!this.config.EnabledDownLoadErr) return;\n                log.setType(LOG_TYPE.DOWNLOAD_ERROR).addExtra(err).end();\n            };\n\n            let reportEnd = (param) => {\n                // console.log('[APM] download end');\n                if (!this.config.EnabledDownLoadPerf) return;\n                log.setType(LOG_TYPE.DOWNLOAD_REQ).addExtra(param).end();\n            };\n\n            return origDownloadFile(Object.assign({}, params, {\n                success: function (res = {}) {\n                    let status = res.statusCode;\n                    let size = res.header ? res.header['Content-Length'] : 0;\n                    status == 200 ? reportEnd({\n                        status,\n                        size,\n                    }) : reportError({\n                        status,\n                        err: res.data,\n                        size,\n                    });\n\n                    if (params.success) {\n                        params.success.call(this, res);\n                    }\n                },\n                fail: function (err) {\n                    // console.log('[APM] downloadfile err', err);\n\n                    reportError({ err });\n\n                    if (params.fail) {\n                        params.fail.call(this, err);\n                    }\n                }\n            }));\n        };\n    }\n}","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\nimport { TIMES_TYPE } from '../collect/times-handler';\n\nexport default class WxRequestHandler extends BaseHandler {\n    constructor(params) {\n        super(params);\n    }\n\n    handle() {\n        if (!this.config.EnabledResErr && !this.config.EnabledResPerf) return;\n        defineProperty(this.wx, 'request', this.requestHandler.bind(this));\n    }\n\n    requestHandler(origRequest) {\n        return (params) => {\n            // console.log('[APM] request', params);\n            let log = this.tracker('', {\n                url: params.url,\n                method: params.method\n            }).start();\n\n            this.collector.addTimes(params.url, TIMES_TYPE.RES_TIMES);\n\n            let reportError = (err) => {\n                console.log('[APM] request err', err);\n                if (!this.config.EnabledResErr) return;\n                log.setType(LOG_TYPE.RES_ERROR).addExtra(err).end();\n            };\n\n            let reportEnd = (param) => {\n                // console.log('[APM] request end');\n                if (!this.config.EnabledResPerf) return;\n                log.setType(LOG_TYPE.RES_REQ).addExtra(param).end();\n            };\n\n            return origRequest(Object.assign({}, params, {\n                success: function (res = {}) {\n                    let size = res.header ? res.header['Content-Length'] : 0;\n                    let status = res.statusCode;\n                    status == 200 ? reportEnd({\n                        status,\n                        size,\n                    }) : reportError({\n                        status,\n                        err: res.data,\n                        size,\n                    });\n\n                    if (params.success) {\n                        params.success.call(this, res);\n                    }\n                },\n                fail: function (err) {\n                    // console.log('[APM] request err', err);\n                    reportError({ err });\n\n                    if (params.fail) {\n                        params.fail.call(this, err);\n                    }\n                }\n            }));\n        };\n    }\n}","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\n\nexport default class WxUploadHandler extends BaseHandler {\n    constructor(params) {\n        super(params);\n    }\n\n    handle() {\n        if (!this.config.EnabledUpLoadErr && !this.config.EnabledUpLoadPerf) return;\n        defineProperty(this.wx, 'uploadFile', this.uploadFileHandler.bind(this));\n    }\n\n    uploadFileHandler(origUploadFile) {\n        return (params) => {\n            // console.log('[APM] upload', params);\n            let log = this.tracker('', {\n                url: params.url,\n                filePath: params.method\n            }).start();\n\n            let reportError = (err) => {\n                console.log('[APM] upload err', err);\n                if (!this.config.EnabledUpLoadErr) return;\n                log.setType(LOG_TYPE.UPLOAD_ERROR).addExtra(err).end();\n            };\n\n            let reportEnd = (param) => {\n                // console.log('[APM] upload end');\n                if (!this.config.EnabledUpLoadPerf) return;\n                log.setType(LOG_TYPE.UPLOAD_REQ).addExtra(param).end();\n            };\n\n            return origUploadFile(Object.assign({}, params, {\n                success: function (res = {}) {\n                    let status = res.statusCode;\n                    let size = res.header ? res.header['Content-Length'] : 0;\n                    status == 200 ? reportEnd({\n                        status,\n                        size,\n                    }) : reportError({\n                        status,\n                        err: res.data,\n                        size,\n                    });\n\n                    if (params.success) {\n                        params.success.call(this, res);\n                    }\n                },\n                fail: function (err) {\n                    reportError({ err });\n\n                    if (params.fail) {\n                        params.fail.call(this, err);\n                    }\n                }\n            }));\n        };\n    }\n}","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\nimport { SOCKET_TIMES_TYPE } from '../collect/socket-times-handler';\n\nexport default class WxSocketHandler extends BaseHandler {\n    constructor(params) {\n        super(params);\n    }\n\n    handle() {\n        if (!this.config.EnabledSocket && !this.config.EnabledSocketTimes) return;\n        defineProperty(this.wx, 'connectSocket', this.connectSocketHandler.bind(this));\n    }\n\n    connectSocketHandler(orignConnectSocket) {\n        return (params) => {\n            // console.log('[APM] socket', params);\n\n            let task = undefined;\n            if (this.config.EnabledSocket) {\n\n                let logParams = {\n                    url: params.url,\n                    method: params.method,\n                    protocols: params.protocols,\n                };\n\n                let log = this.tracker('', logParams).start();\n\n                let onError = (err) => {\n                    // console.log('[APM] socket onerr', err);\n                    this.tracker(LOG_TYPE.SOCKET_ERROR, logParams).addExtra(err).collect();\n                };\n\n                let reportError = (err) => {\n                    // console.log('[APM] socket err', err);\n                    log.setType(LOG_TYPE.SOCKET_ERROR).addExtra(err).end();\n                };\n\n                let reportEnd = (param) => {\n                    // console.log('[APM] socket connected');\n                    log.setType(LOG_TYPE.SOCKET_REQ).addExtra(param).end();\n                };\n\n                task = orignConnectSocket(Object.assign({}, params, {\n                    success: function (res) {\n                        reportEnd({ status: 200 });\n\n                        if (params.success) {\n                            params.success.call(this, res);\n                        }\n                    },\n                    fail: function (err) {\n                        reportError({ err });\n                        if (params.fail) {\n                            params.fail.call(this, err);\n                        }\n                    }\n                }));\n\n                task && task.onError(function (err) {\n                    onError({ err });\n                });\n\n            } else {\n                task = orignConnectSocket(params);\n            }\n\n            if (task && this.config.EnabledSocketTimes) {\n                // console.log('[APM] socket connect');\n                this.collector.addSocketTimes(SOCKET_TIMES_TYPE.CONNECT_TIMES);\n\n                task.onClose((data) => {\n                    // console.log('[APM] socket connect close', data);\n                    if (data.code !== 1000) {\n                        this.collector.addSocketTimes(SOCKET_TIMES_TYPE.DISCONNECT_TIMES);\n                    }\n                });\n            }\n\n            return task;\n        };\n    }\n}","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\n\nexport default class ConsoleErrorHandler extends BaseHandler {\n    constructor(params) {\n        super(params);\n    }\n\n    handle() {\n        if (typeof console != 'undefined' && this.config.EnabledConsoleErr) {\n            defineProperty(console, 'error', this.consoleErrorHandler.bind(this));\n        }\n\n        if (this.wx.onError && this.config.EnabledAppOnErr) {\n            defineProperty(this.wx, 'onError', this.onErrorhandler.bind(this));\n            this.bindOnError();\n\n            // 重写 offError 确保不误删上报事件\n            if (this.wx.offError) {\n                defineProperty(this.wx, 'offError', this.offErrorhandler.bind(this));\n            }\n        }\n    }\n\n    // 解析错误信息，这部分也许会做到 collector 里\n    renderErrMsg(errMsg = '') {\n        if (errMsg && typeof errMsg !== 'string') {\n            return {\n                msg: JSON.stringify(errMsg)\n            };\n        }\n        let msgSplit = errMsg.split('\\n');\n        let msg = msgSplit.slice(0, 2).join('\\n');\n        let stack = msgSplit.slice(2);\n        let lastLine = stack[1] || '';\n        let lineSplit = lastLine.split(':');\n        let column = (lineSplit.pop() || '').replace(')', '') - 0;\n        let line = (lineSplit.pop() || '') - 0;\n        line = isNaN(line) ? 0 : line;\n        return {\n            line,\n            column,\n            msg,\n            stack\n        };\n    }\n\n    bindOnError() {\n        if (this.bindedOnError) {\n            return;\n        }\n        this.bindedOnError = true;\n\n        // wx.onError 支持多次绑定回调事件\n        this.wx.onError((msg) => {\n            console.log('[APM] onError error', msg);\n            let errMsg = this.renderErrMsg(msg.message);\n            errMsg.stack = msg.stack || errMsg.stack;\n            this.tracker(LOG_TYPE.UNCAUGHT_ERROR).addExtra(errMsg).tryReport();\n        });\n    }\n\n    onErrorhandler(originFun) {\n        return (callback) => {\n            this.bindOnError();\n            return originFun(callback);\n        };\n    }\n\n    offErrorhandler(originFun) {\n        return (callback) => {\n            let res = originFun(callback);\n            if (!callback) {\n                this.bindedOnError = false;\n\n                // 防止注册的监控事件被清除\n                this.bindOnError();\n            }\n            return res;\n        };\n    }\n\n    consoleErrorHandler(originFun) {\n        let onError = (msg = {}) => {\n            // console.log('[APM]console msg', msg);\n            let errMsg = this.renderErrMsg(msg[0]);\n            this.tracker(LOG_TYPE.UNCAUGHT_ERROR).addExtra(errMsg).tryReport();\n        };\n\n        return (...message) => {\n            onError(message);\n            return originFun(...message);\n        };\n    }\n}","import BaseHandler from './base-handler';\nimport defineProperty from '../utils/defineProperty';\nimport { LOG_TYPE } from '../model/track-log';\n\nexport default class MemoryWranHandler extends BaseHandler {\n\n    constructor(params) {\n        super(params);\n        this.bindTimes = 0;\n        this.reported = false;\n    }\n\n    handle() {\n\n        if (this.isFun(this.wx.onMemoryWarning) && this.config.EnabledMemoryWarning) {\n            defineProperty(this.wx, 'onMemoryWarning', this.memoryWranHandler.bind(this));\n            this.firstBind();\n        }\n\n    }\n\n    firstBind() {\n        this.wx.onMemoryWarning((msg) => { });\n    }\n\n    report(msg, onBindTime) {\n        if (this.reported || onBindTime != this.bindTimes) {\n            return;\n        }\n        console.log('[APM] onMemoryWarning', msg);\n        this.tracker(LOG_TYPE.MEMORY_WARN).addExtra(msg || {}).collect();\n        this.reported = true;\n    }\n\n    memoryWranHandler(originFun) {\n\n        return (callback) => {\n            const onBindTime = ++this.bindTimes;\n            return originFun((msg) => {\n                this.report(msg, onBindTime);\n                this.isFun(callback) && callback(msg);\n            });\n        };\n    }\n\n}","module.exports = {\"version\":\"0.2.1-2019-12-25\",\"date\":1577249433164,\"mode\":\"dev\"}"],"sourceRoot":""}