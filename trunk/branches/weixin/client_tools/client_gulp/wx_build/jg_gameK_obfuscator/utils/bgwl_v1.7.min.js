"use strict";

function console_log(e, n, t, o) {
  var o = 1 == t ? "\n url:" + (o || _FyhdUrl) : "";console.log("=====sdk " + e + "=====" + o + "\n", n || "");
}function isIos() {
  var e = wx.getSystemInfoSync();_system = "ios" == e.platform ? "ios" : "android" == e.platform ? "android" : "-1" == e.system.indexOf("iOS") && "-1" == e.system.indexOf("IOS") && "-1" == e.system.indexOf("Ios") ? "android" : "ios", console_log("当前系统", _system);
}function fyhdSetStorage(e) {
  var n = [];n.push({ key: e.key, value: e.val }), $KT72PE(wx.getSystemInfoSync().SDKVersion, "1.9.92") >= 0 && wx.setUserCloudStorage({ KVDataList: n, success: function (e) {
      console_log("setUserCloudStorage:success");
    } });
}function wxGetSetting(e, n) {
  wx.getSetting({ success: function (t) {
      console_log("getSettin respone", t), !0 === t.authSetting["scope.userInfo"] ? wx.getStorage({ key: "btnRes", success: function (t) {
          wx.getLaunchOptionsSync();void 0 == t.data || t.data == {} ? _createUserInfoButton(e, function (e) {
            n(e);
          }) : Fyhd.getFyhdUser(t.data, e, function (e) {
            console_log("getFyhdUser", e), n(e);
          });
        }, fail: function (t) {
          _createUserInfoButton(e, function (e) {
            n(e);
          });
        } }) : _createUserInfoButton(e, function (e) {
        n(e);
      });
    } });
}function wxGetLogin(e, n) {
  wx.login({ dataType: "json", success: function (e) {
      wx.request({ url: _FyhdUrl + "/get_wx_userinfo?code=" + e.code + "&identify=" + _identify + "&system=" + _system, header: { "content-type": "application/x-www-form-urlencoded" }, dataType: "json", success: function (e) {
          console_log("get_wx_userinfo", e.data.data, 1);var t = wx.getLaunchOptionsSync(),
              o = { err_code: 1, err_msg: "", result: { user: { openid: e.data.data.openid, token: e.data.data.token, timestamp: e.data.data.timestamp, sign: e.data.data.sign }, shareInfo: t.query } };n(o);
        } });
    }, fail: function (e) {
      console_log("wx.login调用失败", e, 1);
    } });
}function getFyhd() {
  return Fyhd;
}function getLaunchOptionSync() {
  var e = wx.getLaunchOptionsSync().query,
      n = wx.getLaunchOptionsSync().referrerInfo;return e.chid && e.subchid && (channel_id = e.chid, sub_channel_id = e.subchid), n && n.appId && (_source_appid = n.appId), n.extraData && n.extraData.from_uid && (from_uid = n.extraData.from_uid), console_log("getLaunchOptionSync", wx.getLaunchOptionsSync()), console_log("channel_id", channel_id), console_log("sub_channel_id", sub_channel_id), console_log("from_uid", from_uid), 1;
}function getedition() {
  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
      n = __wxConfig.envVersion;switch (n) {case "develop":
      envVersion = "develop";break;case "trial":
      envVersion = "trial";break;case "release":
      envVersion = "release";break;default:
      envVersion = "develop";}var t = {};if (e) _FyhdUrl = "https://cps.fjbgwl.com/api", t = hd_config.pro;else {
    var o = wx.getSystemInfoSync();"-1" == o.system.indexOf("win") ? (console.log("====不是pc环境,系统：", o.system, "====="), "release" == n ? (_FyhdUrl = "https://cps.fjbgwl.com/api", t = hd_config.pro) : (_FyhdUrl = "https://jxxcps-test.szfyhd.com/api", t = hd_config.devp)) : (console.log("====pc环境,系统：", o.system, "====="), _FyhdUrl = "https://cps.fjbgwl.com/api", t = hd_config.pro);
  }return channel_id = t.channel_id, sub_channel_id = t.sub_channel_id, _gameAppid = t.appid, _identify = t.identify, _secret = t.secret_key, _signType = t.sign_type, console_log("当前开发环境", envVersion), console_log("配置参数", t), console_log("当前请求地址", _FyhdUrl), 1;
}function startTap(e) {
  var n = 0;interval = setInterval(function () {
    n++;var t = { openid: e.openid, timing: 0 };30 == n ? (console_log("在线时长上报--30s report"), t.timing = 30, Fyhd.timing(t)) : 300 == n ? (console_log("在线时长上报--300s report"), t.timing = 300, Fyhd.timing(t)) : 600 == n ? (console_log("在线时长上报--600s report"), t.timing = 600, Fyhd.timing(t)) : 1200 == n ? (console_log("在线时长上报--1200s report"), t.timing = 1200, Fyhd.timing(t)) : n > 1200 && (console_log("在线时长上报 --清除在线时长计时器"), clearInterval(interval));
  }, 1e3);
}function _createUserInfoButton(e, n) {
  $KT72PE(wx.getSystemInfoSync().SDKVersion, "2.0.6") >= 0 ? (userinfoBtn = wx.createUserInfoButton({ type: "image", image: e.imageUrl, lang: "zh_CN", style: { left: e.left, top: e.top, width: e.width, height: e.height } }), userinfoBtn.onTap(function (t) {
    console_log("userinfoBtn.onTap.btnRes", t), "getUserInfo:ok" === t.errMsg ? (userinfoBtn.destroy(), userinfoBtn = "", t.userInfo.isVisitor = 0, wx.setStorage({ key: "btnRes", data: t }), Fyhd.getFyhdUser(t, e, function (e) {
      n(e);
    })) : (userinfoBtn.destroy(), userinfoBtn = "", _createUserInfoButton(e, n));
  })) : wx.showModal({ title: "提示", content: "当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。" });
}function callbackInfo(e, n, t) {
  wx.login({ dataType: "json", success: function (o) {
      void 0 == o.code || "" == o.code ? callbackInfo(e, n, function (e) {
        t(e);
      }) : wx.request({ url: _FyhdUrl + "/get_wx_userinfo?code=" + o.code + "&identify=" + _identify + "&system=" + _system, header: { "content-type": "application/x-www-form-urlencoded" }, dataType: "json", success: function (n) {
          console_log("get_wx_userinfo", n.data.data, 1);var o = wx.getLaunchOptionsSync(),
              i = { err_code: 1, err_msg: "", result: { user: { openid: n.data.data.openid, nickname: e.userInfo.nickName, avatarUrl: e.userInfo.avatarUrl, country: e.userInfo.country, province: e.userInfo.province, city: e.userInfo.city, gender: e.userInfo.gender, token: n.data.data.token, isVisitor: e.userInfo.isVisitor, timestamp: n.data.data.timestamp, sign: n.data.data.sign }, shareInfo: o.query } };console_log("fyhdback", i), t(i);
        } });
    }, fail: function (e) {
      console_log("wx.login调用失败", e);
    } });
}function $KT72PE(e, n) {
  e = e.split("."), n = n.split(".");for (var t = Math.max(e.length, n.length); e.length < t;) e.push("0");for (; n.length < t;) n.push("0");for (var o = 0; o < t; o++) {
    var i = parseInt(e[o]),
        a = parseInt(n[o]);if (i > a) return 1;if (i < a) return -1;
  }return 0;
}function sha1(e, n) {
  var t = sort(e),
      o = "";for (var i in t) "sign" != i && (o += i + "=" + t[i] + "&");if (o = o.substring(0, o.length - 1), o = o.replace(/\s+/g, "") + n, "sha1" == _signType) var a = CryptoJS.SHA1(o);else var a = CryptoJS.MD5(o);var r = a.toString();return console_log("加密", "原串str:" + o + "\n 加密sign=" + r), r;
}function sort(e) {
  var n = [];for (var t in e) n.push(t);n.sort();var o = [];for (var i in n) o[n[i]] = e[n[i]];return o;
}var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
  return typeof e;
} : function (e) {
  return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
};require("./crypto-js.js");var hd_config = require("./bgwl.js"),
    _sdk_version = "v1.7",
    _FyhdUrl = "",
    userinfoBtn = "",
    getServerCfg = "",
    envVersion = "develop",
    trueReturn = { err_code: 1, err_msg: "成功" },
    falseReturn = { err_code: 0, err_msg: "失败" },
    _source_appid = "",
    channel_id = "",
    sub_channel_id = "",
    from_uid = "",
    _gameAppid = "",
    _identify = "",
    _secret = "",
    _signType = "",
    _payType = "midas",
    _system = "ios",
    _timestamp = Math.floor(new Date().getTime() / 1e3),
    is_auth = !0,
    shanwan_envVersion = "trial",
    shanwan_appid = "",
    shanwan_path = "",
    is_open = 0,
    interval = 0,
    microend = !1,
    microend_appid = "",
    microend_url = "",
    Fyhd = { startSdk: function (e) {
    console_log("version", _sdk_version), getedition(e), getLaunchOptionSync(), isIos();
  }, getFyhdUserInfo: function (e, n, t) {
    n ? wxGetSetting(e, function (e) {
      t(e);
    }) : wxGetLogin(e, function (e) {
      t(e), startTap({ openid: e.result.user.openid });
    });
  }, getFyhdUser: function (e, n, t) {
    console_log("getFyhdUser", e), callbackInfo(e, n, function (e) {
      t(e);
    });
  }, fyhd_pay: function (e, n) {
    "ios" == _system ? getFyhd().shanwan_pay(e, function (e) {
      n(e);
    }) : getFyhd().getPayType(e, function (t) {
      var o = t;console_log("fyhd_pay", o), "shanwan" == o ? getFyhd().shanwan_pay(e, function (e) {
        n(e);
      }) : getFyhd().submitOrder(e, function (e) {
        n(e);
      });
    });
  }, submitOrder: function (e, n) {
    var t = { _identify: hd_config.pro.identify, _gameAppid: hd_config.pro.appid, _secret: hd_config.pro.secret_key, channel_id: hd_config.pro.channel_id, sub_channel_id: hd_config.pro.sub_channel_id },
        o = { identify: t._identify, client_id: t._gameAppid, pay_amount: e.pay_amount, openid: e.openid, third_order_sn: e.order_sn },
        i = "https://cps.fjbgwl.com/api",
        a = sha1(o, t._secret);wx.request({ url: i + "/wxgame_create", method: "POST", header: { "content-type": "application/x-www-form-urlencoded" }, data: { identify: t._identify, client_id: t._gameAppid, extra_info: e.extra_info, goods_count: e.goods_count, goods_des: e.goods_des, goods_identifier: e.goods_identifier, goods_name: e.goods_name, pay_amount: e.pay_amount, openid: e.openid, redirect_uri: e.redirect_uri, role_id: e.role_id, role_name: e.role_name, server_id: e.server_id, server_name: e.server_name, channel_id: t.channel_id, sub_channel_id: t.sub_channel_id, order_sn: e.order_sn, sign: a }, success: function (o) {
        var a = o.data.data.result.signParam;if (console_log("submitOrder signParam", a, 1, i), void 0 == a) n(falseReturn);else if (0 == a.code) n(trueReturn);else if (1 == a.code) {
          var r = a.data,
              s = o.data.data.result;wx.requestMidasPayment({ mode: "game", env: a.env, currencyType: "CNY", platform: "android", offerId: r.offerId, buyQuantity: r.buyQuantity, zoneId: 1, success: function (o) {
              var a = { order_sn: s.order_sn, pay_amount: s.pay_amount, openid: e.openid, identify: t._identify },
                  d = sha1(a, t._secret);console_log("支付成功", o), wx.request({ url: i + "/hmwxgame", method: "POST", header: { "content-type": "application/x-www-form-urlencoded" }, data: { order_sn: s.order_sn, pay_amount: s.pay_amount, openid: e.openid, identify: t._identify, scale: r.scale, sign: d }, success: function (e) {
                  console_log("回调通知成功", e), "SUCCESS" == e.data ? (trueReturn.err_msg = "支付成功", n(trueReturn)) : "FAIL" == e.data && (trueReturn.err_msg = "支付成功，可能产生延迟到账，请稍后查询", n(trueReturn));
                }, fail: function (e) {
                  falseReturn.err_msg = "支付失败", n(falseReturn);
                } });
            }, fail: function (o) {
              console_log("支付失败", o, 1, i), falseReturn.result = o, n(falseReturn);var a = { order_sn: s.order_sn, pay_amount: s.pay_amount, openid: e.openid, identify: t._identify },
                  d = sha1(a, t._secret);wx.request({ url: i + "/fail", method: "POST", header: { "content-type": "application/x-www-form-urlencoded" }, data: { order_sn: s.order_sn, pay_amount: s.pay_amount, openid: e.openid, identify: t._identify, scale: r.scale, sign: d }, success: function (e) {
                  "SUCCESS" == e.data ? (falseReturn.err_msg = "支付成功", n(falseReturn)) : (falseReturn.err_msg = "支付失败", n(falseReturn));
                }, fail: function (e) {
                  falseReturn.err_msg = "支付失败", n(falseReturn);
                } });
            }, complete: function (e) {
              console_log("支付结束", e, 1, i);
            } });
        }
      } });
  }, shanwan_pay: function (e, n) {
    var t = { _identify: hd_config.pro.identify, _gameAppid: hd_config.pro.appid, _secret: hd_config.pro.secret_key, channel_id: hd_config.pro.channel_id, sub_channel_id: hd_config.pro.sub_channel_id },
        o = "https://cps.fjbgwl.com/api";wx.request({ url: o + "/get_ios_info", data: { system: _system, client_id: t._gameAppid }, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, success: function (i) {
        shanwan_envVersion = i.data.data.envVersion, shanwan_appid = i.data.data.appid, shanwan_path = i.data.data.path, is_open = i.data.data.is_open, console_log("ios信息", i, 1, o), wx.navigateToMiniProgram({ appId: shanwan_appid, path: shanwan_path, extraData: { identify: t._identify, client_id: t._gameAppid, extra_info: e.extra_info, goods_count: e.goods_count, goods_des: e.goods_des, goods_identifier: e.goods_identifier, goods_name: e.goods_name, pay_amount: e.pay_amount, openid: e.openid, redirect_uri: e.redirect_uri, role_id: e.role_id, role_name: e.role_name, server_id: e.server_id, server_name: e.server_name, channel_id: t.channel_id, sub_channel_id: t.sub_channel_id, order_sn: e.order_sn, type: "to_pay" }, envVersion: shanwan_envVersion, success: function (e) {
            console_log("shanwan_pay success", e, 1, o), trueReturn.err_msg = "支付成功", n(trueReturn);
          }, fail: function (e) {
            console_log("shanwan_pay fail", e, 1, o), falseReturn.err_msg = "支付失败", n(falseReturn);
          } });
      } });
  }, getPayType: function (e, n) {
    var t = { game_appid: _gameAppid, env_version: envVersion, openid: e.openid, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.game_appid = t.game_appid, o.env_version = t.env_version, o.openid = t.openid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("安卓判断支付方式参数", t, 1), wx.request({ url: _FyhdUrl + "/cps/get_android_pay_type", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("getPayType result", e, 1);var t = e.data;void 0 !== t.data.pay_type && "shanwan" == t.data.pay_type && (_payType = "shanwan"), n(_payType);
      }, fail: function (e) {
        console_log("getPayType fail", e, 1);
      } });
  }, loginData: function (e, n) {
    var t = e;t.game_appid = _gameAppid, t.create_time = Math.floor(new Date().getTime() / 1e3), t.channel_id = channel_id, t.sub_channel_id = sub_channel_id, t.source_appid = _source_appid, t.from_uid = from_uid;var o = { openid: t.openid, game_appid: t.game_appid, create_time: t.create_time, channel_id: t.channel_id, sub_channel_id: t.sub_channel_id };t.sign = sha1(o, _secret), t.sign_type = _signType, void 0 != _typeof(e.extra_param) || "" != String(e.extra_param) ? t.extra_param = e.extra_param : t.extra_param = "", console_log("loginData 参数", t), wx.request({ url: _FyhdUrl + "/cps/authorizing", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("loginData result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("loginData fail", e, 1);
      } });
  }, roleData: function (e, n) {
    var t = { role_id: e.role_id, openid: e.openid, game_appid: _gameAppid, type: 1, create_time: e.create_time };void 0 != _typeof(e.server_id) || "" != String(e.server_id) ? t.server_id = e.server_id : t.server_id = 9999, void 0 != _typeof(e.server_name) || "" != String(e.server_name) ? t.server_name = e.server_name : t.server_name = "默认区服", void 0 == _typeof(e.nickname) && "" == String(e.nickname) || (t.nickname = e.nickname);var o = {};o.role_id = t.role_id, o.create_time = t.create_time, o.game_appid = t.game_appid, o.openid = t.openid, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("roleData 参数", t), wx.request({ url: _FyhdUrl + "/cps/role", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("roleData result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("roleData fail", e, 1);
      } });
  }, uploginData: function (e, n) {
    var t = { openid: e.openid, game_appid: _gameAppid, create_time: e.create_time, role_id: e.role_id };void 0 != _typeof(e.server_id) || "" != String(e.server_id) ? t.server_id = e.server_id : t.server_id = 9999, void 0 != _typeof(e.server_name) || "" != String(e.server_name) ? t.server_name = e.server_name : t.server_name = "默认区服", void 0 == _typeof(e.nickname) && "" == String(e.nickname) || (t.nickname = e.nickname);var o = {};o.role_id = t.role_id, o.create_time = t.create_time, o.game_appid = t.game_appid, o.openid = t.openid, t.sign = sha1(o, _secret), t.sign_type = _signType, t.from_uid = from_uid, console_log("uploginData 参数", t, 1), wx.request({ url: _FyhdUrl + "/cps/login", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("uploginData result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("uploginData fail", e, 1);
      } });
  }, paylimit: function (e, n) {
    var t = { game_appid: _gameAppid, channel_id: channel_id, sub_channel_id: sub_channel_id, openid: e.openid, edition: envVersion, system: _system, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.game_appid = t.game_appid, o.channel_id = t.channel_id, o.openid = t.openid, o.edition = t.edition, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("paylimit 参数", t), wx.request({ url: _FyhdUrl + "/cps/pay_setting", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("paylimit result", e, 1);var t = e.data;n(t);
      }, fail: function (e) {
        console_log("paylimit fail", e, 1);var t = { code: 1, msg: "请求失败，返回默认值", time: Math.floor(new Date().getTime() / 1e3), data: { is_open: !1, level: "9999", mission: "9999", is_reach: !0 } };n(t);
      } });
  }, mplimit: function (e, n) {
    var t = { game_appid: _gameAppid, channel_id: channel_id, sub_channel_id: sub_channel_id, openid: e.openid, edition: envVersion, system: _system, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.game_appid = t.game_appid, o.channel_id = t.channel_id, o.openid = t.openid, o.edition = t.edition, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("mplimit 参数", t), wx.request({ url: _FyhdUrl + "/cps/mppay_setting", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("mplimit result", e, 1);var t = e.data;n(t);
      }, fail: function (e) {
        console_log("mplimit fail", e, 1);var t = { code: 1, msg: "请求失败，返回默认值", time: Math.floor(new Date().getTime() / 1e3), data: { mp_limit: !1 } };n(t);
      } });
  }, timing: function (e) {
    var n = { openid: e.openid, game_appid: _gameAppid, channel_id: channel_id, sub_channel_id: sub_channel_id, timing: e.timing, create_time: Math.floor(new Date().getTime() / 1e3) },
        t = {};t.openid = n.openid, t.game_appid = n.game_appid, t.channel_id = n.channel_id, t.sub_channel_id = n.sub_channel_id, t.timing = n.timing, t.create_time = n.create_time, n.sign = sha1(t, _secret), n.sign_type = _signType, wx.request({ url: _FyhdUrl + "/cps/timing", data: n, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (n) {
        console_log(e.timing, "s 上报成功");
      }, fail: function (n) {
        console_log(e.timing, "s 上报失败");
      } });
  }, valueuser: function (e, n) {
    var t = { openid: e.openid, game_appid: _gameAppid, channel_id: channel_id, sub_channel_id: sub_channel_id, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.openid = t.openid, o.game_appid = t.game_appid, o.channel_id = t.channel_id, o.sub_channel_id = t.sub_channel_id, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("valueuser 参数", t), wx.request({ url: _FyhdUrl + "/cps/valueuser", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("valueuser result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("valueuser fail", e, 1);
      } });
  }, microend_config: function (e, n) {
    var t = { openid: e.openid, game_appid: _gameAppid, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.openid = t.openid, o.game_appid = t.game_appid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("microend_config 参数", t), wx.request({ url: _FyhdUrl + "/microend/config", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, success: function (e) {
        console_log("微端配置", e, 1), microend = e.data.data.microend, microend_appid = e.data.data.microend_appid, microend_url = e.data.data.microend_url, n(e.data);
      } });
  }, to_microend: function (e, n) {
    microend && wx.navigateToMiniProgram({ appId: microend_appid, extraData: { game_appid: _gameAppid, openid: e.openid, microend_url: microend_url, type: "to_microend" }, envVersion: "release", success: function (e) {
        console_log("to_microend success", e, 1), trueReturn.err_msg = "跳转微端小程序成功", n(trueReturn);
      }, fail: function (e) {
        console_log("to_microend fail", e, 1), falseReturn.err_msg = "跳转微端小程序失败", n(falseReturn);
      } });
  }, advertisement: function (e, n) {
    var t = { ad_type: e.ad_type, game_appid: _gameAppid, channel_id: channel_id, sub_channel_id: sub_channel_id, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.ad_type = t.ad_type, o.game_appid = t.game_appid, o.channel_id = t.channel_id, o.sub_channel_id = t.sub_channel_id, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("advertisement 参数", t), wx.request({ url: _FyhdUrl + "/cps/advertisement", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("advertisement result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("advertisement fail", e, 1);
      } });
  }, shareRecommend: function (e, n) {
    var t = { from_appid: _gameAppid, create_time: Math.floor(new Date().getTime() / 1e3) };e.from_appid && (t.from_appid = e.from_appid);var o = {};o.from_appid = t.from_appid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("shareRecommend 参数", t), wx.request({ url: _FyhdUrl + "/cps/share_recommend", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("shareRecommend result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("shareRecommend fail", e, 1);
      } });
  }, sharePlay: function (e, n) {
    var t = { from_appid: _gameAppid, to_appid: e.to_appid, openid: e.openid, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.from_appid = t.from_appid, o.to_appid = t.to_appid, o.openid = t.openid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("sharePlay 参数", t), wx.request({ url: _FyhdUrl + "/cps/share_play", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("sharePlay result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("sharePlay fail", e, 1);
      } });
  }, msgSecCheck: function (e, n) {
    var t = { appid: _gameAppid, content: e.content };wx.request({ url: _FyhdUrl + "/third/msg_check", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("msgSecCheck result", e, 1);var t = e.data;n(t);
      }, fail: function (e) {
        console_log("msgSecCheck fail", e, 1);
      } });
  }, shareConfig: function (e, n) {
    var t = { game_appid: _gameAppid, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.game_appid = t.game_appid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("shareConfig 参数", t), wx.request({ url: _FyhdUrl + "/cps/share_config", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("shareConfig result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("shareConfig fail", e, 1);var t = { code: 1, msg: "请求失败，返回默认值", time: Math.floor(new Date().getTime() / 1e3), data: { is_share: !1, is_collect: !1, is_push: !1, is_red_pack: !1, path: "", share_pic: "", title: "请求失败，返回默认值" } };n(t);
      } });
  }, mpConfig: function (e, n) {
    var t = { game_appid: _gameAppid, create_time: Math.floor(new Date().getTime() / 1e3), channel_id: channel_id, sub_channel_id: sub_channel_id },
        o = {};o.game_appid = t.game_appid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("mp上报配置 参数", t), wx.request({ url: _FyhdUrl + "/cps/mp_up_config", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("mpConfig result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("mpConfig fail", e, 1);var t = { code: 1, msg: "请求失败，返回默认值", time: Math.floor(new Date().getTime() / 1e3), data: { up_state: !1, action_set_id: "", title: "请求失败，返回默认值" } };n(t);
      } });
  }, mpPayConfig: function (e, n) {
    var t = { game_appid: _gameAppid, openid: e.openid, pay_amount: e.pay_amount, channel_id: channel_id, sub_channel_id: sub_channel_id, create_time: Math.floor(new Date().getTime() / 1e3) },
        o = {};o.game_appid = t.game_appid, o.openid = t.openid, o.create_time = t.create_time, t.sign = sha1(o, _secret), t.sign_type = _signType, console_log("mpPayConfig 参数", t), wx.request({ url: _FyhdUrl + "/cps/mp_pay_up_config", data: t, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
        console_log("mpPayConfig result", e, 1), n(e.data);
      }, fail: function (e) {
        console_log("mpPayConfig fail", e, 1);
      } });
  }, subscribe: function (e, n) {
    var t = e.template_id;return e.openid && t ? "[object Array]" != Object.prototype.toString.call(t) ? void console_log("template_id不是有效的数组") : t.length < 1 || t.length > 3 ? void console_log("template_id支持的消息个数为1~3") : wx.requestSubscribeMessage ? void wx.requestSubscribeMessage({ tmplIds: t, success: function (o) {
        console_log("subscribe success", o), wx.getSetting({ withSubscriptions: !0, success: function (i) {
            console_log("res.subscriptionsSetting", i.subscriptionsSetting);var a = { game_appid: _gameAppid, create_time: Math.floor(new Date().getTime() / 1e3), template_id: t.join(","), openid: e.openid, always: i.subscriptionsSetting.itemSettings && i.subscriptionsSetting.itemSettings[t[0]] ? 1 : 0, action: o[t[0]] },
                r = JSON.parse(JSON.stringify(a));a.sign = sha1(r, _secret), a.sign_type = _signType, console_log("subscribe 参数", a), wx.request({ url: _FyhdUrl + "/subscribe/index", data: a, method: "post", header: { "content-type": "application/x-www-form-urlencoded" }, complete: function (e) {
                console_log("subscribe result", e, 1), n(e.data);
              }, fail: function (e) {
                console_log("subscribe fail", e, 1), n(e.data);
              } });
          }, fail: function (e) {
            console_log("subscribe:wx.getSetting fail", e, 1), n(e.data);
          } });
      }, fail: function (e) {
        console_log("subscribe fail", e, 1), n(e.data);
      } }) : void wx.showModal({ title: "提示", content: "当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。" }) : void console_log("缺少openid或者template_id参数");
  }, alertI: function (e, n) {
    wx.showModal({ title: "提示", content: "该接口暂无权限", success: function (e) {
        e.confirm ? console_log("用户点击确定") : e.cancel && console_log("用户点击取消");
      } });
  }, sdk_encrypt: function (e, n) {
    var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "sha1",
        o = Fyhd.sdk_sort(e),
        i = "";for (var a in o) "sign" != a && (i += a + "=" + o[a] + "&");if (i = i.substring(0, i.length - 1), i = i.replace(/\s+/g, "") + n, "sha1" == t) var r = CryptoJS.SHA1(i);else var r = CryptoJS.MD5(i);var s = r.toString();return console_log("加密", "原串str:" + i + "\n 加密sign=" + s), s;
  }, sdk_sort: function (e) {
    var n = [];for (var t in e) n.push(t);n.sort();var o = [];for (var i in n) o[n[i]] = e[n[i]];return o;
  } };module.exports = { getFyhd: getFyhd };